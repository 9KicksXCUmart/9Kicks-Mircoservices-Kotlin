---
name: Build and Push Golang Image to AWS ECR
on:
  push:
    branches:
      - dev-nick
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACTIONS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACTIONS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: "Create env file"
        run: |
          touch .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_REGION_NAME=${{ secrets.AWS_REGION_NAME }} >> .env
          echo AWS_DYNAMODB_TABLE_NAME=${{ secrets.AWS_DYNAMODB_TABLE_NAME}} >> .env
          echo CORS_ORIGINS=${{ secrets.CORS_ORIGINS }} >> .env
          echo GO_BACKEND_URL=${{ secrets.GO_BACKEND_URL }} >> .env
          echo STRIPE_KEY=${{ secrets.STRIPE_KEY }} >> .env

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./scripts/git_update.sh -v patch

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nine-kicks-kotlin
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

